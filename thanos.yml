---
- hosts: localhost
  vars:
     application: united
     instance_count: 3
     access: accesskey
     secret: secretkey
  tasks:
    - name: Get my current IP address
      uri:
        url: http://checkip.amazonaws.com/
        return_content: yes
      register: my_ip

    - name: Create security grp
      ec2_group:
        name: secure
        description: my security group
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        region: ap-south-1
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: webservers_group

    - name: Create ELB with name Thanos,added additional security which were existed
      ec2_elb_lb:
        name: Thanos
        state: present
        region: ap-south-1
        security_group_names: secure,default,CentOS 7 -x86_64- - with Updates HVM-1901_01-AutogenByAWSMP-1
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        zones:
          - ap-south-1a
          - ap-south-1b
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80
      register: elb

    - name: Create EC2 instances
      ec2:
        key_name: id_rsa
        instance_type: t2.micro
        image: ami-0f891ddb551de3ada    #-e41b618b
        region: ap-south-1
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        group: secure,default,CentOS 7 -x86_64- - with Updates HVM-1901_01-AutogenByAWSMP-1
        wait: yes
        instance_tags:
          application: united
        exact_count: 3
        count_tag:
          application: united
      register: ec2_instances

    - name: Store EC2 instance IPs to provision against
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: ec2_instance_ips
      with_items: "{{ ec2_instances.tagged_instances }}"

    - name: Wait for servers to come online
      wait_for:
        host: "{{ item.public_ip }}"
        port: 22
        timeout: 180
      with_items: "{{ ec2_instances.tagged_instances }}"

    - name: Add EC2 instances as known hosts
      known_hosts:
        name: "{{ item.public_ip }}"
        key: "{{ lookup('pipe', 'ssh-keyscan -t rsa ' + item.public_ip) }}"
      with_items: "{{ ec2_instances.tagged_instances }}"


- hosts: ec2_instance_ips
  remote_user: centos
  become: True
  tasks:
    - name: Install httpd
      yum:
        name: httpd
        state: present
    - name: Create default index page
      copy:
        dest: /var/www/html/index.html
        content: "Howdy from kan"
    - name: Restart httpd
      service:
        name: httpd
        state: restarted


- hosts: localhost
  vars:
     access: accesskey
     secret: secretkey
  tasks:
    - name: Add each EC2 instance to the ELB
      ec2_elb:
        state: present
        ec2_elbs: Thanos
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        region: "{{ item.region }}"
        instance_id: "{{ item.id }}"
      with_items: "{{ ec2_instances.tagged_instances }}"


    - name: Terminate instances
      ec2:
        instance_ids: "{{ item.id }}"
        region: '{{ item.region }}'
        aws_access_key: "{{ access }}"
        aws_secret_key: "{{ secret }}"
        state: absent
        wait: True
      with_items: "{{ ec2_instances.tagged_instances }}"
